package com.jkoss.pojo.oa;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SalaryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public SalaryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSalidIsNull() {
            addCriterion("salid is null");
            return (Criteria) this;
        }

        public Criteria andSalidIsNotNull() {
            addCriterion("salid is not null");
            return (Criteria) this;
        }

        public Criteria andSalidEqualTo(Integer value) {
            addCriterion("salid =", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidNotEqualTo(Integer value) {
            addCriterion("salid <>", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidGreaterThan(Integer value) {
            addCriterion("salid >", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidGreaterThanOrEqualTo(Integer value) {
            addCriterion("salid >=", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidLessThan(Integer value) {
            addCriterion("salid <", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidLessThanOrEqualTo(Integer value) {
            addCriterion("salid <=", value, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidIn(List<Integer> values) {
            addCriterion("salid in", values, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidNotIn(List<Integer> values) {
            addCriterion("salid not in", values, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidBetween(Integer value1, Integer value2) {
            addCriterion("salid between", value1, value2, "salid");
            return (Criteria) this;
        }

        public Criteria andSalidNotBetween(Integer value1, Integer value2) {
            addCriterion("salid not between", value1, value2, "salid");
            return (Criteria) this;
        }

        public Criteria andEidIsNull() {
            addCriterion("eid is null");
            return (Criteria) this;
        }

        public Criteria andEidIsNotNull() {
            addCriterion("eid is not null");
            return (Criteria) this;
        }

        public Criteria andEidEqualTo(Integer value) {
            addCriterion("eid =", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotEqualTo(Integer value) {
            addCriterion("eid <>", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThan(Integer value) {
            addCriterion("eid >", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidGreaterThanOrEqualTo(Integer value) {
            addCriterion("eid >=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThan(Integer value) {
            addCriterion("eid <", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidLessThanOrEqualTo(Integer value) {
            addCriterion("eid <=", value, "eid");
            return (Criteria) this;
        }

        public Criteria andEidIn(List<Integer> values) {
            addCriterion("eid in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotIn(List<Integer> values) {
            addCriterion("eid not in", values, "eid");
            return (Criteria) this;
        }

        public Criteria andEidBetween(Integer value1, Integer value2) {
            addCriterion("eid between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andEidNotBetween(Integer value1, Integer value2) {
            addCriterion("eid not between", value1, value2, "eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidIsNull() {
            addCriterion("t_e_eid is null");
            return (Criteria) this;
        }

        public Criteria andT_e_eidIsNotNull() {
            addCriterion("t_e_eid is not null");
            return (Criteria) this;
        }

        public Criteria andT_e_eidEqualTo(Integer value) {
            addCriterion("t_e_eid =", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidNotEqualTo(Integer value) {
            addCriterion("t_e_eid <>", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidGreaterThan(Integer value) {
            addCriterion("t_e_eid >", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidGreaterThanOrEqualTo(Integer value) {
            addCriterion("t_e_eid >=", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidLessThan(Integer value) {
            addCriterion("t_e_eid <", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidLessThanOrEqualTo(Integer value) {
            addCriterion("t_e_eid <=", value, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidIn(List<Integer> values) {
            addCriterion("t_e_eid in", values, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidNotIn(List<Integer> values) {
            addCriterion("t_e_eid not in", values, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidBetween(Integer value1, Integer value2) {
            addCriterion("t_e_eid between", value1, value2, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andT_e_eidNotBetween(Integer value1, Integer value2) {
            addCriterion("t_e_eid not between", value1, value2, "t_e_eid");
            return (Criteria) this;
        }

        public Criteria andSalmthIsNull() {
            addCriterion("salmth is null");
            return (Criteria) this;
        }

        public Criteria andSalmthIsNotNull() {
            addCriterion("salmth is not null");
            return (Criteria) this;
        }

        public Criteria andSalmthEqualTo(Date value) {
            addCriterionForJDBCDate("salmth =", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthNotEqualTo(Date value) {
            addCriterionForJDBCDate("salmth <>", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthGreaterThan(Date value) {
            addCriterionForJDBCDate("salmth >", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("salmth >=", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthLessThan(Date value) {
            addCriterionForJDBCDate("salmth <", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("salmth <=", value, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthIn(List<Date> values) {
            addCriterionForJDBCDate("salmth in", values, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthNotIn(List<Date> values) {
            addCriterionForJDBCDate("salmth not in", values, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("salmth between", value1, value2, "salmth");
            return (Criteria) this;
        }

        public Criteria andSalmthNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("salmth not between", value1, value2, "salmth");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNull() {
            addCriterion("basicsalary is null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIsNotNull() {
            addCriterion("basicsalary is not null");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryEqualTo(Integer value) {
            addCriterion("basicsalary =", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotEqualTo(Integer value) {
            addCriterion("basicsalary <>", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThan(Integer value) {
            addCriterion("basicsalary >", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryGreaterThanOrEqualTo(Integer value) {
            addCriterion("basicsalary >=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThan(Integer value) {
            addCriterion("basicsalary <", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryLessThanOrEqualTo(Integer value) {
            addCriterion("basicsalary <=", value, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryIn(List<Integer> values) {
            addCriterion("basicsalary in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotIn(List<Integer> values) {
            addCriterion("basicsalary not in", values, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andBasicsalaryNotBetween(Integer value1, Integer value2) {
            addCriterion("basicsalary not between", value1, value2, "basicsalary");
            return (Criteria) this;
        }

        public Criteria andMeritsalIsNull() {
            addCriterion("meritsal is null");
            return (Criteria) this;
        }

        public Criteria andMeritsalIsNotNull() {
            addCriterion("meritsal is not null");
            return (Criteria) this;
        }

        public Criteria andMeritsalEqualTo(Integer value) {
            addCriterion("meritsal =", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalNotEqualTo(Integer value) {
            addCriterion("meritsal <>", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalGreaterThan(Integer value) {
            addCriterion("meritsal >", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalGreaterThanOrEqualTo(Integer value) {
            addCriterion("meritsal >=", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalLessThan(Integer value) {
            addCriterion("meritsal <", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalLessThanOrEqualTo(Integer value) {
            addCriterion("meritsal <=", value, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalIn(List<Integer> values) {
            addCriterion("meritsal in", values, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalNotIn(List<Integer> values) {
            addCriterion("meritsal not in", values, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalBetween(Integer value1, Integer value2) {
            addCriterion("meritsal between", value1, value2, "meritsal");
            return (Criteria) this;
        }

        public Criteria andMeritsalNotBetween(Integer value1, Integer value2) {
            addCriterion("meritsal not between", value1, value2, "meritsal");
            return (Criteria) this;
        }

        public Criteria andIsbuysbIsNull() {
            addCriterion("isbuysb is null");
            return (Criteria) this;
        }

        public Criteria andIsbuysbIsNotNull() {
            addCriterion("isbuysb is not null");
            return (Criteria) this;
        }

        public Criteria andIsbuysbEqualTo(Integer value) {
            addCriterion("isbuysb =", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbNotEqualTo(Integer value) {
            addCriterion("isbuysb <>", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbGreaterThan(Integer value) {
            addCriterion("isbuysb >", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbGreaterThanOrEqualTo(Integer value) {
            addCriterion("isbuysb >=", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbLessThan(Integer value) {
            addCriterion("isbuysb <", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbLessThanOrEqualTo(Integer value) {
            addCriterion("isbuysb <=", value, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbIn(List<Integer> values) {
            addCriterion("isbuysb in", values, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbNotIn(List<Integer> values) {
            addCriterion("isbuysb not in", values, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbBetween(Integer value1, Integer value2) {
            addCriterion("isbuysb between", value1, value2, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andIsbuysbNotBetween(Integer value1, Integer value2) {
            addCriterion("isbuysb not between", value1, value2, "isbuysb");
            return (Criteria) this;
        }

        public Criteria andAddsalIsNull() {
            addCriterion("addsal is null");
            return (Criteria) this;
        }

        public Criteria andAddsalIsNotNull() {
            addCriterion("addsal is not null");
            return (Criteria) this;
        }

        public Criteria andAddsalEqualTo(Integer value) {
            addCriterion("addsal =", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalNotEqualTo(Integer value) {
            addCriterion("addsal <>", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalGreaterThan(Integer value) {
            addCriterion("addsal >", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalGreaterThanOrEqualTo(Integer value) {
            addCriterion("addsal >=", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalLessThan(Integer value) {
            addCriterion("addsal <", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalLessThanOrEqualTo(Integer value) {
            addCriterion("addsal <=", value, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalIn(List<Integer> values) {
            addCriterion("addsal in", values, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalNotIn(List<Integer> values) {
            addCriterion("addsal not in", values, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalBetween(Integer value1, Integer value2) {
            addCriterion("addsal between", value1, value2, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddsalNotBetween(Integer value1, Integer value2) {
            addCriterion("addsal not between", value1, value2, "addsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalIsNull() {
            addCriterion("addmeritsal is null");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalIsNotNull() {
            addCriterion("addmeritsal is not null");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalEqualTo(Integer value) {
            addCriterion("addmeritsal =", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalNotEqualTo(Integer value) {
            addCriterion("addmeritsal <>", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalGreaterThan(Integer value) {
            addCriterion("addmeritsal >", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalGreaterThanOrEqualTo(Integer value) {
            addCriterion("addmeritsal >=", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalLessThan(Integer value) {
            addCriterion("addmeritsal <", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalLessThanOrEqualTo(Integer value) {
            addCriterion("addmeritsal <=", value, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalIn(List<Integer> values) {
            addCriterion("addmeritsal in", values, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalNotIn(List<Integer> values) {
            addCriterion("addmeritsal not in", values, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalBetween(Integer value1, Integer value2) {
            addCriterion("addmeritsal between", value1, value2, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andAddmeritsalNotBetween(Integer value1, Integer value2) {
            addCriterion("addmeritsal not between", value1, value2, "addmeritsal");
            return (Criteria) this;
        }

        public Criteria andSaldescIsNull() {
            addCriterion("saldesc is null");
            return (Criteria) this;
        }

        public Criteria andSaldescIsNotNull() {
            addCriterion("saldesc is not null");
            return (Criteria) this;
        }

        public Criteria andSaldescEqualTo(String value) {
            addCriterion("saldesc =", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescNotEqualTo(String value) {
            addCriterion("saldesc <>", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescGreaterThan(String value) {
            addCriterion("saldesc >", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescGreaterThanOrEqualTo(String value) {
            addCriterion("saldesc >=", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescLessThan(String value) {
            addCriterion("saldesc <", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescLessThanOrEqualTo(String value) {
            addCriterion("saldesc <=", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescLike(String value) {
            addCriterion("saldesc like", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescNotLike(String value) {
            addCriterion("saldesc not like", value, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescIn(List<String> values) {
            addCriterion("saldesc in", values, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescNotIn(List<String> values) {
            addCriterion("saldesc not in", values, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescBetween(String value1, String value2) {
            addCriterion("saldesc between", value1, value2, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSaldescNotBetween(String value1, String value2) {
            addCriterion("saldesc not between", value1, value2, "saldesc");
            return (Criteria) this;
        }

        public Criteria andSalstateIsNull() {
            addCriterion("salstate is null");
            return (Criteria) this;
        }

        public Criteria andSalstateIsNotNull() {
            addCriterion("salstate is not null");
            return (Criteria) this;
        }

        public Criteria andSalstateEqualTo(Integer value) {
            addCriterion("salstate =", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateNotEqualTo(Integer value) {
            addCriterion("salstate <>", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateGreaterThan(Integer value) {
            addCriterion("salstate >", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("salstate >=", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateLessThan(Integer value) {
            addCriterion("salstate <", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateLessThanOrEqualTo(Integer value) {
            addCriterion("salstate <=", value, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateIn(List<Integer> values) {
            addCriterion("salstate in", values, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateNotIn(List<Integer> values) {
            addCriterion("salstate not in", values, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateBetween(Integer value1, Integer value2) {
            addCriterion("salstate between", value1, value2, "salstate");
            return (Criteria) this;
        }

        public Criteria andSalstateNotBetween(Integer value1, Integer value2) {
            addCriterion("salstate not between", value1, value2, "salstate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_salary
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_salary
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}